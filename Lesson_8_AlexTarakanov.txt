Добрый день !
С Новым годом !


Задание 1:

На мой взгляд замыкание для инкапсуляции одно из самых эффективных решений.
На питоне инкапсуляции - нет в принципе(вернее она есть, но не работает ) ).
Если применительно к 7 практикуму, то так и не придумал, где можно использовать замыкания в коде.

 
Задание 2:

1.
if (!("a" in window)) {
    var a = 1;
}
alert(a);

Ответ: undefined, как я понимаю мы не объявили переменную а нигде(кроме как тела условия)
, таким образом в window -нет такой переменной и поэтому условие не выполняется и не происходит присвоение переменной а = 1.

2.
var b = function a(x) {
    x && a(--x);
};
alert(a);

Ответ: переменная "а" нигде не определена, будет ошибка при выполнении скрипта.

3.
function a(x) {
    return x * 2;
}
var a;
alert(a);

Ответ: Присвоит "а" тело функции.
Объявление функции переопределяет объявление переменной при поднятии так как
объявление функции имеет приоритет над объявлениями переменных (но не над назначением переменных).

4.
function b(x, y, a) {
    arguments[2] = 10;
    alert(a);
}
b(1, 2, 3);

Ответ: 3
Занятная конструкция, argiments - локальная переменная внутри функции.При этом 
И в agruments[2] есть значение 10 и а = 3, так как "а" вне функции присолили 3.
Круто ) 

5.
function a() {
    alert(this);
}
a.call(null);

Ответ: null, так как при вызове call - первый аргумент - context(this).Таким образом
This присваивается значение null, он и выводится при alert. Если бы в функцию а , серее call передали какой нибудь объект, то этот объект так же вызывался бы через this.объект.
Другие аргументы в функции можно передать следующим образом: a.call(context, b, c)



